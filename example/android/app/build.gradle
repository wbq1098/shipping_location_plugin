def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 29

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.nxzybd.shipping_location_plugin_example"
        minSdkVersion 15
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        ndk {
            abiFilters "armeabi", "armeabi-v7a" , "arm64-v8a", "x86", "x86_64"
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            minifyEnabled false  //资源压缩设置
            useProguard false    //代码压缩设置
            shrinkResources false  //删除无用资源
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildToolsVersion '29.0.3'
    ndkVersion '21.3.6528147'


}

flutter {
    source '../..'
}
repositories {
    flatDir {
//            dirs 'libs'
        dirs project(':shipping_location_plugin').file('libs'),'libs'// 直接用模块的相对路径，这样是绝对准确的
    }
}
dependencies {
    implementation 'com.lzy.net:okgo:3.0.4'
    implementation 'com.alibaba:fastjson:1.2.61'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.47'
    implementation (name:'locationsdk-1.0.0', ext:'aar')
//    compile(name: 'locationsdk-1.0.0', ext: 'aar')
//    compile ('com.hdgq.locationlib:locationsdk-1.0.0@aar'){ transitive = true; }
//    compile ('com.hdgq.locationlib:*@aar'){ transitive = true; }
//    implementation project(":locationsdk-1.0.0")
//    api(name: 'locationsdk-1.0.0', ext: 'aar')
}